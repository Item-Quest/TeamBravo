name: Deploy to Cassini

on:
  workflow_dispatch: {}  # Allows manual triggering
  push:
    branches:
      - main  # Runs on push to make_action (change to your desired branch name)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2 

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ID_RSA }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh-keyscan cassini.cs.kent.edu >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Verify SSH Connection
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no itemquest@cassini.cs.kent.edu "echo 'Connected to Cassini'"

      - name: Deploy Code to Cassini
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no itemquest@cassini.cs.kent.edu << 'EOF'
           # Load NVM
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            # Confirm correct Node.js version is being used
            echo "Using correct Node.js version..."
            which node
            node -v
            npm -v
            cd TeamBravo || exit 1
            git reset --hard
            git clean -fd
            git pull origin main || exit 1
            cd client || exit 1
            rm -rf node_modules
            rm -f package-lock.json
            npm install || exit 1
            npm run build || exit 1
            cd ../server || exit 1
             if screen -list | grep -q "itemquest_server"; then
              screen -S itemquest_server -X quit
            fi
            # Create a new detached screen session
            screen -dmS itemquest_server bash -c "python app.py" 
          EOF
